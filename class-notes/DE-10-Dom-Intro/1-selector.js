//* ======================================================
//*                   getElementById()
//* ======================================================


//! example_1 (button style) ##################################################

const button = document.getElementById("btn")    // btn is Id name

button.style.width = "200px"
button.style.height = "80px"
button.style.fontSize = "40px"
button.style.color = "yellow"
button.style.backgroundColor = "red"


//! example_2 (pragraph style) ##################################################

const paragraf = document.getElementById("par")  // par is Id name 

paragraf.style.backgroundColor = "gray"
paragraf.style.color = "orange"
paragraf.style.fontSize = "50px"
paragraf.style.padding = "10px"

//!##############################################################################


//* =============================================================================
//*                   getElementByTAGNAME()
//* tag ismiyle Ã§aÄŸÄ±rÄ±yoruz.aynÄ± tag den Ã§ok olacaÄŸÄ± iÃ§in index le hangisini seÃ§tiÄŸimizi belirtiyoruz (HTMLCollection- Array Ã¶zellikleri gÃ¶sterir)
//*=============================================================================


//! example_3  (img style) ######################################################

const resim = document.getElementsByTagName("img")

console.log(resim);                  // HTML Collection 

resim[0].style.width = "300px"
resim[1].style.border = "5px solid red"

//!##############################################################################


//* ======================================================
//*                   getElementByCLASSNAME()
//* class ismiyle Ã§aÄŸÄ±rÄ±yoruz
//*======================================================

const baslik = document.getElementsByClassName("H1")   // H1 is class name 

console.log(baslik);                                  //HTML Collection

baslik[0].style.color = "red"
baslik[1].style.textAlign = "center"

//! array'i degistiren methodlari kullanabiliriz.
//! tÃ¼m ayni isimdeki classlara erisip degisiklik yapmak icin
//! asagidaki gibi for dÃ¶ngÃ¼sÃ¼ kullanilabilir.

for (let i=0 ; i < baslik.length; i++){

    baslik[i].style.color = "purple"
    baslik[i].style.fontSize = "50px"

}
//todo yukarda kirmizi deniyor asagida purple deniyor. asagida olan kazanir. 
//!######################################################################

baslik[0].innerHTML=" <a href='https://www.clarusway.com' >DOM COK KOLAY</a> "
//todo DOM SELECTOR yazan h1 etiketini, DOM COK KOLAY yazan <a> etiketine dÃ¶nusturduk

// baslik[1].innerHTML="NAPIYORSUN"

baslik[1].textContent = "NASILSIN"
//todo sadece iÃ§erik deÄŸiÅŸecekse textContent tercih edilir, ama innerHTML de etiketi deÄŸiÅŸtirebildiÄŸi gibi, iÃ§eriÄŸi de deÄŸiÅŸtirebilir

//!###################################################################################

//* ===================================================================================
//*                  QUERYSELECTOR,QUERYSELECTORALL
//*====================================================================================

document.querySelector("title").textContent="DOM MANiPULATION ğŸ’œ"
document.querySelector("#badi").style.backgroundImage="linear-gradient(green, pink)"
document.querySelector(".H2").style.color="yellow"
//todo birden fazla h2 olsa ilkini alirdi. 
document.querySelector("p")     //! ilk p getirir.
document.querySelectorAll("p")  //! tÃ¼m p ler geldi. 
console.log(document.querySelectorAll("p"));            // NodeList

document.querySelectorAll("p")[1].style.fontSize = "70px"


//!###################################################################################


// Bir NodeList ve bir HTMLcollection hemen hemen aynÄ± ÅŸeydir.

// Her ikisi de bir belgeden Ã§Ä±karÄ±lan dÃ¼ÄŸÃ¼mlerin (Ã¶ÄŸelerin) dizi benzeri koleksiyonlarÄ±dÄ±r (listeleridir). DÃ¼ÄŸÃ¼mlere indeks numaralarÄ± ile eriÅŸilebilir. indeks 0'dan baÅŸlar.

// Her ikisinin de listedeki (koleksiyon) Ã¶ÄŸelerin sayÄ±sÄ±nÄ± dÃ¶ndÃ¼ren bir uzunluk Ã¶zelliÄŸi (length) vardÄ±r.


// HTMLCollection Ã¶ÄŸelerine adlarÄ±, kimlikleri veya dizin numaralarÄ±yla eriÅŸilebilir.
// baslik.namedItem("id1").style.color = "red";
//  baslik[0].style.color="red";

// NodeList Ã¶ÄŸelerine yalnÄ±zca dizin numaralarÄ±yla eriÅŸilebilir.

// Bir HTMLCollection her zaman canlÄ± bir koleksiyondur. Ã–rnek: DOM'daki bir listeye bir <li> Ã¶ÄŸesi eklerseniz, HTMLCollection'daki liste de deÄŸiÅŸecektir.

// Bir NodeList genellikle statik bir koleksiyondur. Ã–rnek: DOM'daki bir listeye bir <li> Ã¶ÄŸesi eklerseniz, NodeList'teki liste deÄŸiÅŸmez.
// getElementsByClassName()ve yÃ¶ntemleri , getElementsByTagName() canlÄ± bir HTMLCollection dÃ¶ndÃ¼rÃ¼r.

// querySelectorAll(), statik bir NodeList dÃ¶ndÃ¼rÃ¼r.
//!burada netten https://softauthor.com/javascript-htmlcollection-vs-nodelist/ adresinden gÃ¶ster
// Dizi DeÄŸil!
// Bir NodeList bir dizi gibi gÃ¶rÃ¼nebilir ama Ã¶yle deÄŸildir.

// Bir NodeList iÃ§inde dÃ¶ngÃ¼ yapabilir ve dÃ¼ÄŸÃ¼mlerine dizine gÃ¶re baÅŸvurabilirsiniz.

// Ancak, bir NodeList'te push(), pop() veya join() gibi Array yÃ¶ntemlerini kullanamazsÄ±nÄ±z.
